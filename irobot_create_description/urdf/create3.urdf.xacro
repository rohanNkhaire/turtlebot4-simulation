<?xml version="1.0" ?>
<robot name="create3" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find irobot_create_description)/urdf/bumper.urdf.xacro" />
  <xacro:include filename="$(find irobot_create_description)/urdf/button.urdf.xacro" />
  <xacro:include filename="$(find irobot_create_description)/urdf/caster.urdf.xacro" />
  <xacro:include filename="$(find irobot_create_description)/urdf/sensors/imu.urdf.xacro" />
  <xacro:include filename="$(find irobot_create_description)/urdf/common_properties.urdf.xacro"/>
  <xacro:include filename="$(find irobot_create_description)/urdf/wheel_with_wheeldrop.urdf.xacro" />

  <!-- Gazebo version -->
  <xacro:arg name="gazebo"                       default="ignition" />

  <!-- Namespace -->
  <xacro:arg name="namespace"                    default=""/>

  <!-- Mechanical properties -->
  <xacro:property name="body_z_offset"           value="${-2.5*cm2m}" />
  <xacro:property name="body_collision_z_offset" value="${1*cm2m}" />
  <xacro:property name="body_mass"               value="2.300" />
  <xacro:property name="body_radius"             value="${16.4*cm2m}" />
  <xacro:property name="body_length"             value="${6*cm2m}" />

  <xacro:if value="${'$(arg gazebo)' == 'ignition'}">
    <xacro:property name="body_cog_x_offset"       value="${2.28*cm2m}" />
  </xacro:if>
  <xacro:if value="${'$(arg gazebo)' == 'classic'}">
    <xacro:property name="body_cog_x_offset"       value="${0*cm2m}" />
  </xacro:if>

  <xacro:property name="bumper_mass"             value="0.1" />
  <xacro:property name="bumper_offset_z"         value="${-2.5*cm2m}" />
  <xacro:property name="bumper_inertial_x"       value="${8*cm2m}" />
  <xacro:property name="bumper_inertial_z"       value="${2*cm2m}"/>

  <xacro:property name="wheel_height"            value="${-2.75*cm2m}" />
  <xacro:property name="distance_between_wheels" value="${23.3*cm2m}" />

  <xacro:property name="caster_position_x"       value="${12.5*cm2m}" />
  <xacro:if value="${'$(arg gazebo)' == 'ignition'}">
    <xacro:property name="caster_position_z"       value="${-5.03*cm2m}" />
  </xacro:if>
  <xacro:if value="${'$(arg gazebo)' == 'classic'}">
    <xacro:property name="caster_position_z"       value="${-5.2*cm2m}" />
  </xacro:if>
  
  <xacro:property name="wheel_drop_offset_z"     value="${3.5*mm2m}"/>
  <xacro:property name="wheel_drop_z"            value="${wheel_height + wheel_drop_offset_z}"/>

  <xacro:property name="base_link_z_offset"     value="${6.42*cm2m}"/>

  <!-- Docking properties -->
  <xacro:property name="robot_model_name" value="create3"/>
  <xacro:property name="receiver_link_name" value="ir_omni"/>
  <xacro:property name="dock_model_name" value="standard_dock"/>
  <xacro:property name="emitter_link_name" value="halo_link"/>
  <xacro:arg name="visualize_rays" default="false"/>
  <!-- Create 3 base definition-->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 ${body_z_offset + base_link_z_offset}" rpy="0 0 ${pi/2}"/>
      <geometry>
        <mesh filename="package://irobot_create_description/meshes/body_visual.dae" />
      </geometry>
    </visual>
    <collision name="create3_base_collision">
      <origin xyz="0 0 ${body_z_offset + body_collision_z_offset  + base_link_z_offset}" rpy="0 0 ${pi/2}"/>
      <geometry>
        <cylinder length="${body_length}" radius="${body_radius}"/>
      </geometry>
    </collision>
    <xacro:inertial_cylinder_with_pose mass="${body_mass}" radius="${body_radius}" length="${body_length}">
      <origin xyz="${body_cog_x_offset} 0 ${body_collision_z_offset + base_link_z_offset}"/>
    </xacro:inertial_cylinder_with_pose>
  </link>

  <xacro:if value="${'$(arg gazebo)' == 'ignition'}">
    <gazebo reference="base_link">
      <xacro:material_darkgray/>
    </gazebo>
  </xacro:if>

  <!-- Bumper -->
  <xacro:bumper
      gazebo="$(arg gazebo)"
      namespace="$(arg namespace)"
      visual_mesh="package://irobot_create_description/meshes/bumper_visual.dae"
      collision_mesh="package://irobot_create_description/meshes/bumper_collision.dae">
    <origin xyz="0 0 ${bumper_offset_z  + base_link_z_offset}"/>
    <inertial>
      <origin xyz="${bumper_inertial_x} 0 ${bumper_inertial_z}"/>
      <mass value="${bumper_mass}"/>
      <inertia ixx="0.0013483753405" ixy="0.0000000454352" ixz="0.0000014434849"
               iyy="0.0002521736852" iyz="-0.0000000006721" izz="0.0015442525386"/>
    </inertial>
  </xacro:bumper>

  <!-- IMU -->
  <xacro:imu_sensor gazebo="$(arg gazebo)" namespace="$(arg namespace)">
    <origin xyz="0.050613 0.043673 ${0.0202 + base_link_z_offset}"/>
  </xacro:imu_sensor>

  <!-- Wheels with mechanical wheel drop -->
  <xacro:wheel_with_wheeldrop name="left" gazebo="$(arg gazebo)" namespace="$(arg namespace)">
    <origin xyz="0 ${distance_between_wheels/2} ${wheel_drop_z  + base_link_z_offset}" rpy="${-pi/2} 0 0"/>
  </xacro:wheel_with_wheeldrop>

  <xacro:wheel_with_wheeldrop name="right" gazebo="$(arg gazebo)" namespace="$(arg namespace)">
    <origin xyz="0 ${-distance_between_wheels/2} ${wheel_drop_z  + base_link_z_offset}" rpy="${-pi/2} 0 0"/>
  </xacro:wheel_with_wheeldrop>

  <!-- Caster wheel -->
  <xacro:caster name="front_caster" parent_link="base_link">
    <origin xyz="${caster_position_x} 0 ${caster_position_z  + base_link_z_offset}" rpy="${-pi/2} 0 0"/>
  </xacro:caster>

  <xacro:if value="${'$(arg gazebo)' == 'classic'}">
    <gazebo>
      <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
        <parameters>$(find irobot_create_description)/config/control.yaml</parameters>
        <ros>
          <remapping>~/odom:=odom</remapping>
          <remapping>/tf:=tf</remapping>
          <remapping>/tf_static:=tf_static</remapping>
          <remapping>/diagnostics:=diagnostics</remapping>
          <namespace>$(arg namespace)</namespace>
        </ros>
      </plugin>
    </gazebo>
  </xacro:if>

  <xacro:if value="${'$(arg gazebo)' == 'ignition'}">
    <gazebo>
      <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
        <parameters>$(find irobot_create_description)/config/control.yaml</parameters>
        <ros>
          <remapping>~/odom:=odom</remapping>
          <remapping>/tf:=tf</remapping>
          <remapping>/tf_static:=tf_static</remapping>
          <remapping>/diagnostics:=diagnostics</remapping>
          <namespace>$(arg namespace)</namespace>
        </ros>
      </plugin>
    </gazebo>
  </xacro:if>

  <!-- Buttons -->
  <xacro:button
      name="button_1">
      <origin xyz="0.06 0.37 ${0.08 + base_link_z_offset}" rpy="0 ${-pi/2} 0"/>
  </xacro:button>
  <xacro:button
      name="button_2">
      <origin xyz="0.06 -0.37 ${0.08 + base_link_z_offset}" rpy="0 ${-pi/2} 0"/>
  </xacro:button>
  <xacro:button
      name="button_power">
      <origin xyz="0.06 0 ${0.08 + base_link_z_offset}" rpy="0 ${-pi/2} 0"/>
  </xacro:button>

  <!-- Plugins -->
  <xacro:if value="${'$(arg gazebo)' == 'classic'}">
    <!-- Ground truth pose -->
    <gazebo>
      <plugin name="gazebo_ros_p3d_robot" filename="libgazebo_ros_p3d.so">
        <ros>
          <namespace>$(arg namespace)</namespace>
          <remapping>odom:=sim_ground_truth_pose</remapping>
        </ros>
        <body_name>base_link</body_name>
        <frame_name>world</frame_name>
        <update_rate>62</update_rate>
        <xyz_offset>0 0 0</xyz_offset>
        <rpy_offset>0.0 0.0 0.0</rpy_offset>
        <gaussian_noise>0.0</gaussian_noise>
      </plugin>
    </gazebo>

    <!-- Dock status -->
    <gazebo>
      <plugin name="dock_status_publisher" filename="libgazebo_ros_create_docking_status.so">
        <ros>
          <namespace>$(arg namespace)</namespace>
          <remapping>~/out:=dock_status</remapping>
        </ros>
        <update_rate>1.0</update_rate>
        <robot_model_name>${robot_model_name}</robot_model_name>
        <receiver_link_name>${receiver_link_name}</receiver_link_name>
        <dock_model_name>${dock_model_name}</dock_model_name>
        <emitter_link_name>${emitter_link_name}</emitter_link_name>
      </plugin>
    </gazebo>
  </xacro:if>

  <xacro:if value="${'$(arg gazebo)' == 'ignition'}">
    <gazebo>
      <plugin filename="gz-sim-pose-publisher-system" name="gz::sim::systems::PosePublisher">
        <publish_link_pose>true</publish_link_pose>
        <publish_nested_model_pose>true</publish_nested_model_pose>
        <use_pose_vector_msg>true</use_pose_vector_msg>
        <update_frequency>62</update_frequency>
      </plugin>
    </gazebo>
    
    <gazebo>
      <plugin filename="gz-sim-contact-system" name="gz::sim::systems::Contact"></plugin>
    </gazebo>

    <gazebo>
      <plugin filename="gz-sim-sensors-system" name="gz::sim::systems::Sensors">
        <render_engine>ogre2</render_engine>
      </plugin>
    </gazebo>
  </xacro:if>
</robot>
